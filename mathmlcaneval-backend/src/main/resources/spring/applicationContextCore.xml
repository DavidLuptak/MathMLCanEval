<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:s="http://www.springframework.org/schema/security" 
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:cache="http://www.springframework.org/schema/cache"
       xsi:schemaLocation="http://www.springframework.org/schema/beans 
                            http://www.springframework.org/schema/beans/spring-beans.xsd
                            http://www.springframework.org/schema/context 
                            http://www.springframework.org/schema/context/spring-context.xsd
                            http://www.springframework.org/schema/tx 
                            http://www.springframework.org/schema/tx/spring-tx.xsd
                            http://www.springframework.org/schema/aop 
                            http://www.springframework.org/schema/aop/spring-aop.xsd
                            http://www.springframework.org/schema/security
                            http://www.springframework.org/schema/security/spring-security.xsd
                            http://www.springframework.org/schema/cache 
                            http://www.springframework.org/schema/cache/spring-cache.xsd">
    
    
    
    
    <tx:annotation-driven transaction-manager="transactionManager" />    
<!--    <cache:annotation-driven cache-manager="cacheManager"/>-->
                    
    <context:component-scan base-package="cz.muni.fi.mir" />
    
    <aop:aspectj-autoproxy proxy-target-class="true"/>
    
    
    <!-- http://forum.spring.io/forum/spring-projects/data/29626-how-to-turn-off-hibernate-cache-for-query-jpa -->
    <!-- http://stackoverflow.com/questions/13956224/spring-3-2-and-cache-abstraction-missing-ehcache-implementation -->
    <!-- http://stackoverflow.com/questions/13083987/spring3-1-and-hibernate4-eh-cache -->
    <!-- http://jsoftbiz.wordpress.com/2013/03/14/hibernate-4-and-ehcache-higher-than-2-4-3/-->
    <!-- http://stackoverflow.com/questions/11905722/java-lang-noclassdeffounderror-org-hibernate-cache-entityregion-configuring-ehc -->
    <!-- TODO zistit ako to funguje je to daka novinka .. -->
    <!-- cache works but outside servlet, which closes SessionFactory app hangs -->
    
<!--    <bean id="ehCacheManager"
        class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean"
        p:configLocation="classpath:META-INF/ehcache.xml"
        p:shared="false" 
        destroy-method="destroy"
    />

    <bean id="cacheManager"
        class="org.springframework.cache.ehcache.EhCacheCacheManager"
        p:cacheManager-ref="ehCacheManager" />-->
    
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
        <property name="driverClass" value="${hibernate.connection.driver_class}"/>
        <property name="jdbcUrl" value="${hibernate.connection.url}"/>
        <property name="user" value="${hibernate.connection.username}"/>
        <property name="password" value="${hibernate.connection.password}"/>            
        <property name="minPoolSize" value="${hibernate.c3p0.min_size}" />
        <property name="maxPoolSize" value="${hibernate.c3p0.max_size}"/>
        <property name="checkoutTimeout" value="${hibernate.c3p0.timeout}"/>
        <property name="maxStatements" value="${hibernate.c3p0.max_statements}"/>
        <property name="idleConnectionTestPeriod" value="${hibernate.c3p0.idle_test_period}"/>
    </bean>
    
    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="persistenceUnitName" value="mathcaneval" />
        <property name="dataSource" ref="dataSource" />
        <property name="jpaProperties">
            <props>
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>
                <prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
                <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
                <prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
                <prop key="hibernate.hbm2ddl.import_files">${hibernate.hbm2ddl.import_files}</prop>
                <prop key="hibernate.cacheable">${hibernate.cacheable}</prop>
                <prop key="hibernate.search.lucene_version">${hibernate.search.lucene_version}</prop> 
                <prop key="hibernate.search.default.directory_provider">${hibernate.search.default.directory_provider}</prop>               
                <prop key="hibernate.search.default.indexBase">${hibernate.search.default.indexBase}</prop>
                <!-- still does not work even after 10 hours of googling how to make it done... -->
<!--                <prop key="hibernate.cache.use_second_level_cache">${hibernate.cache.use_second_level_cache}</prop>
                <prop key="hibernate.cache.region.factory_class">${hibernate.cache.region.factory_class}</prop>
                <prop key="net.sf.ehcache.configurationResourceName">META-INF/ehcache.xml</prop>-->
            </props>
        </property>
    </bean>
    
    <bean class="org.springframework.orm.jpa.JpaTransactionManager" id="transactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory" />
    </bean>
    
    
    <bean id="documentBuilderFactory" class="javax.xml.parsers.DocumentBuilderFactory" factory-method="newInstance" />
    
    <bean id="documentBuilder" class="javax.xml.parsers.DocumentBuilder" factory-bean="documentBuilderFactory" factory-method="newDocumentBuilder" />
    
    <bean id="mathCanonicalizerLoader" class="cz.muni.fi.mir.services.MathCanonicalizerLoaderImpl" factory-method="newInstance">        
        <constructor-arg name="revision" value="${mathml-canonicalizer.default.revision}"/>
        <constructor-arg name="mainClassName" value="${mathml-canonicalizer.default.mainclass}"/>
        <constructor-arg name="jarFolder" value="${mathml-canonicalizer.default.jarFolder}"/>
    </bean>
        
    <bean id="taskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
        <property name="corePoolSize" value="5" />
        <property name="maxPoolSize" value="10" />
        <property name="queueCapacity" value="25" />
    </bean>
    
    <bean id="canonicalizationTask" class="cz.muni.fi.mir.scheduling.CanonicalizationTask" scope="prototype" lazy-init="true" />
    
    <bean id="canonicalizationTaskFactory" class="cz.muni.fi.mir.scheduling.CanonicalizationTaskFactory">
        <lookup-method name="createTask" bean="canonicalizationTask" />
    </bean>
    
    
    <bean id="statisticsService" class="cz.muni.fi.mir.db.service.impl.StatisticsServiceImpl">
        <constructor-arg name="IS_VALID" value="#isValid" />
        <constructor-arg name="IS_INVALID" value="#isInvalid" />
        <constructor-arg name="UNCERTAIN" value="#uncertain" />
        <constructor-arg name="REMOVE_RESULT" value="#removeResult" />
    </bean>
    
    
<!--    <bean id="canonicalizationTaskFactory" class="cz.muni.fi.mir.tasks.CanonicalizationTaskFactory" />-->

<!--    <bean id="cacheManager" class="org.springframework.cache.support.SimpleCacheManager">
        <property name="caches">
            <set>
                <bean class="org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean" name="departments"/>
            </set>
        </property>
    </bean> 
   -->
   
   
<!--    <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
        <property name="host" value="{mail.host}" />
    </bean>
    
    <bean id="templateMessage" class="org.springframework.mail.SimpleMailMessage">
        <property name="from" value="{mail.from}" />
        <property name="subject" value="{mail.subject}" />
    </bean>
    
    <bean id="mailSerivce" class="cz.muni.fi.mir.services.MailServiceImpl">
        <property name="mailsender" ref="mailSender" />
        <property name="templateMessage" ref="templateMessage" />
    </bean>
    -->
</beans>
